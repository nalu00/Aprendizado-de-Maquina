{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyP/bcqbv1oEjXjR7bnrEYs+",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/nalu00/Aprendizado-de-Maquina/blob/main/DeveresDeCasa/Dever-05\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1AlBl7MYi51H",
        "outputId": "3d8639ad-470a-46a2-85c6-3fe8f7813508"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Arquivo CSV criado com sucesso!\n",
            "Modelo treinado com sucesso!\n",
            "Digite o IMC para previsão: 27\n",
            "A pessoa não é classificada como obesa.\n"
          ]
        }
      ],
      "source": [
        "import pandas as pd\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "\n",
        "# Criar o arquivo CSV\n",
        "dados = {\n",
        "    'IMC': [22, 25, 28, 30, 32, 35, 20, 27, 33, 36],\n",
        "    'Obeso': [False, False, False, True, True, True, False, False, True, True]\n",
        "}\n",
        "\n",
        "df = pd.DataFrame(dados)\n",
        "df.to_csv('imc_obesidade.csv', index=False)\n",
        "\n",
        "print(\"Arquivo CSV criado com sucesso!\")\n",
        "\n",
        "# Carregar os dados\n",
        "df = pd.read_csv('imc_obesidade.csv')\n",
        "\n",
        "# Dividir os dados em treino e teste\n",
        "X = df[['IMC']]\n",
        "y = df['Obeso']\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n",
        "\n",
        "# Treinar o modelo\n",
        "modelo = LogisticRegression()\n",
        "modelo.fit(X_train, y_train)\n",
        "\n",
        "print(\"Modelo treinado com sucesso!\")\n",
        "\n",
        "# Fazer uma previsão\n",
        "imc_usuario = float(input(\"Digite o IMC para previsão: \"))\n",
        "\n",
        "# Criar um DataFrame com o nome da coluna correta\n",
        "input_data = pd.DataFrame({'IMC': [imc_usuario]})\n",
        "\n",
        "previsao = modelo.predict(input_data)\n",
        "\n",
        "if previsao[0]:\n",
        "    print(\"A pessoa é classificada como obesa.\")\n",
        "else:\n",
        "    print(\"A pessoa não é classificada como obesa.\")"
      ]
    }
  ]
}